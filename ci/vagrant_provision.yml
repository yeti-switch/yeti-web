---
- hosts: all
  vars:
    rvm:
      url: "https://raw.githubusercontent.com/rvm/rvm/master/binscripts/rvm-installer"
      sig_url: "https://raw.githubusercontent.com/rvm/rvm/master/binscripts/rvm-installer.asc"
      installer_path: "/tmp/rmv_installer.sh"
      root: "/usr/local/rvm"
      env_hack: "/etc/profile.d/rvm.sh"
    ruby:
      version: 2.3
    sync_excludes:
      - "*.swp"
      - ".vagrant"
      - "*.retry"
    docker_ver: 17.09.0~ce-0~ubuntu
    ansible_become: yes
    ansible_become_method: sudo
  tasks:
    - name: Add postgresql apt repo key  
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc

    - name: Add postgresql repo
      apt_repository:
        repo: deb http://apt.postgresql.org/pub/repos/apt/ {{ansible_distribution_release}}-pgdg main 

    - name: Install dependencies
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      with_items:
        - postgresql-9.4
        - postgresql-9.4-prefix
        - postgresql-9.4-pgq3
        - xvfb
        - gnupg
        - curl
        - wget
        - git
        - rsync
        - openssl
        - apt-transport-https
        - ca-certificates
        - software-properties-common

    - name: Create dirs for project
      file:
        path: /home/vagrant/projects/yeti-web/
        state: directory
      become: false

    - name: Sync project to build directory
      shell: rsync -a --delete {% for e in sync_excludes %}--exclude "{{e}}" {% endfor %} /vagrant/ /home/vagrant/projects/yeti-web/
      become: false
 
    #
    # RVM
    #
    - name: Check whether RVM installed
      shell: "{{rvm.root}}/bin/rvm --version"
      ignore_errors: yes
      register: rvm_check

    - block:
      # start block

      - name: Receive RVM key
        shell: "curl -sSL https://rvm.io/mpapis.asc | gpg --import -"
  
      - name: Download RVM installer
        get_url:
          url: "{{rvm.url}}"
          dest: "{{rvm.installer_path}}"
          mode: "0755"
  
      - name: Download RVM installer's signature
        get_url:
          url: "{{rvm.sig_url}}"
          dest: "{{rvm.installer_path}}.asc"
  
      - name: Check RVM installer
        shell: gpg --verify {{rvm.installer_path}}.asc
  
      - name: Install RVM
        shell: "{{rvm.installer_path}} --path {{rvm.root}} stable"
  
      - name: Remove RVM installer
        file:
          path: "{{rvm.installer_path}}{{item}}"
          state: absent
        with_items:
          - ""
          - ".asc"
       
      - name: Install ruby {{ruby.version}}
        shell: "{{rvm.root}}/bin/rvm install {{ruby.version}}"
    
      - name: Setting default Ruby version to {{ruby.version}}
        shell: "source {{rvm.env_hack}} && rvm use {{ruby.version}} --default executable=/bin/bash"

      # end block
      when: rvm_check.rc != 0
 
    #
    # Docker
    #

    - name: Check whether docker installed
      shell: docker --version
      ignore_errors: yes
      register: docker_check

    - block:
      # start block

      - name: Add Docker repository key
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
        when: ansible_python_version | version_compare('2.7.9', '>=')
  
      - name: Add Docker repository key (alternate)
        shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
        when: ansible_python_version | version_compare('2.7.9', '<')
  
      - name: Add Docker repository for ubuntu {{ansible_distribution_release}}
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable 
  
      - name: Install docker package
        apt:
          name: docker-ce={{docker_ver}}
          state: present
          update_cache: yes

      # end block
      when: docker_check.rc != 0
